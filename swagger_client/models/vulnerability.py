# coding: utf-8

"""
    OWASP Dependency-Track

    REST API of OWASP Dependency-Track  # noqa: E501

    OpenAPI spec version: 4.13.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Vulnerability(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vuln_id': 'str',
        'source': 'str',
        'friendly_vuln_id': 'str',
        'title': 'str',
        'sub_title': 'str',
        'description': 'str',
        'detail': 'str',
        'recommendation': 'str',
        'references': 'str',
        'credits': 'str',
        'created': 'datetime',
        'published': 'datetime',
        'updated': 'datetime',
        'cwes': 'list[Cwe]',
        'cvss_v2_base_score': 'float',
        'cvss_v2_impact_sub_score': 'float',
        'cvss_v2_exploitability_sub_score': 'float',
        'cvss_v2_vector': 'str',
        'cvss_v3_base_score': 'float',
        'cvss_v3_impact_sub_score': 'float',
        'cvss_v3_exploitability_sub_score': 'float',
        'cvss_v3_vector': 'str',
        'owasp_rr_likelihood_score': 'float',
        'owasp_rr_technical_impact_score': 'float',
        'owasp_rr_business_impact_score': 'float',
        'owasp_rr_vector': 'str',
        'severity': 'str',
        'vulnerable_versions': 'str',
        'patched_versions': 'str',
        'epss_score': 'float',
        'epss_percentile': 'float',
        'components': 'list[Component]',
        'service_components': 'list[ServiceComponent]',
        'uuid': 'str',
        'aliases': 'list[VulnerabilityAlias]',
        'finding_attribution': 'FindingAttribution',
        'affected_project_count': 'int',
        'affected_active_project_count': 'int',
        'affected_inactive_project_count': 'int',
        'affected_components': 'list[AffectedComponent]',
        'cwe': 'Cwe'
    }

    attribute_map = {
        'vuln_id': 'vulnId',
        'source': 'source',
        'friendly_vuln_id': 'friendlyVulnId',
        'title': 'title',
        'sub_title': 'subTitle',
        'description': 'description',
        'detail': 'detail',
        'recommendation': 'recommendation',
        'references': 'references',
        'credits': 'credits',
        'created': 'created',
        'published': 'published',
        'updated': 'updated',
        'cwes': 'cwes',
        'cvss_v2_base_score': 'cvssV2BaseScore',
        'cvss_v2_impact_sub_score': 'cvssV2ImpactSubScore',
        'cvss_v2_exploitability_sub_score': 'cvssV2ExploitabilitySubScore',
        'cvss_v2_vector': 'cvssV2Vector',
        'cvss_v3_base_score': 'cvssV3BaseScore',
        'cvss_v3_impact_sub_score': 'cvssV3ImpactSubScore',
        'cvss_v3_exploitability_sub_score': 'cvssV3ExploitabilitySubScore',
        'cvss_v3_vector': 'cvssV3Vector',
        'owasp_rr_likelihood_score': 'owaspRRLikelihoodScore',
        'owasp_rr_technical_impact_score': 'owaspRRTechnicalImpactScore',
        'owasp_rr_business_impact_score': 'owaspRRBusinessImpactScore',
        'owasp_rr_vector': 'owaspRRVector',
        'severity': 'severity',
        'vulnerable_versions': 'vulnerableVersions',
        'patched_versions': 'patchedVersions',
        'epss_score': 'epssScore',
        'epss_percentile': 'epssPercentile',
        'components': 'components',
        'service_components': 'serviceComponents',
        'uuid': 'uuid',
        'aliases': 'aliases',
        'finding_attribution': 'findingAttribution',
        'affected_project_count': 'affectedProjectCount',
        'affected_active_project_count': 'affectedActiveProjectCount',
        'affected_inactive_project_count': 'affectedInactiveProjectCount',
        'affected_components': 'affectedComponents',
        'cwe': 'cwe'
    }

    def __init__(self, vuln_id=None, source=None, friendly_vuln_id=None, title=None, sub_title=None, description=None, detail=None, recommendation=None, references=None, credits=None, created=None, published=None, updated=None, cwes=None, cvss_v2_base_score=None, cvss_v2_impact_sub_score=None, cvss_v2_exploitability_sub_score=None, cvss_v2_vector=None, cvss_v3_base_score=None, cvss_v3_impact_sub_score=None, cvss_v3_exploitability_sub_score=None, cvss_v3_vector=None, owasp_rr_likelihood_score=None, owasp_rr_technical_impact_score=None, owasp_rr_business_impact_score=None, owasp_rr_vector=None, severity=None, vulnerable_versions=None, patched_versions=None, epss_score=None, epss_percentile=None, components=None, service_components=None, uuid=None, aliases=None, finding_attribution=None, affected_project_count=None, affected_active_project_count=None, affected_inactive_project_count=None, affected_components=None, cwe=None):  # noqa: E501
        """Vulnerability - a model defined in Swagger"""  # noqa: E501
        self._vuln_id = None
        self._source = None
        self._friendly_vuln_id = None
        self._title = None
        self._sub_title = None
        self._description = None
        self._detail = None
        self._recommendation = None
        self._references = None
        self._credits = None
        self._created = None
        self._published = None
        self._updated = None
        self._cwes = None
        self._cvss_v2_base_score = None
        self._cvss_v2_impact_sub_score = None
        self._cvss_v2_exploitability_sub_score = None
        self._cvss_v2_vector = None
        self._cvss_v3_base_score = None
        self._cvss_v3_impact_sub_score = None
        self._cvss_v3_exploitability_sub_score = None
        self._cvss_v3_vector = None
        self._owasp_rr_likelihood_score = None
        self._owasp_rr_technical_impact_score = None
        self._owasp_rr_business_impact_score = None
        self._owasp_rr_vector = None
        self._severity = None
        self._vulnerable_versions = None
        self._patched_versions = None
        self._epss_score = None
        self._epss_percentile = None
        self._components = None
        self._service_components = None
        self._uuid = None
        self._aliases = None
        self._finding_attribution = None
        self._affected_project_count = None
        self._affected_active_project_count = None
        self._affected_inactive_project_count = None
        self._affected_components = None
        self._cwe = None
        self.discriminator = None
        if vuln_id is not None:
            self.vuln_id = vuln_id
        if source is not None:
            self.source = source
        if friendly_vuln_id is not None:
            self.friendly_vuln_id = friendly_vuln_id
        if title is not None:
            self.title = title
        if sub_title is not None:
            self.sub_title = sub_title
        if description is not None:
            self.description = description
        if detail is not None:
            self.detail = detail
        if recommendation is not None:
            self.recommendation = recommendation
        if references is not None:
            self.references = references
        if credits is not None:
            self.credits = credits
        if created is not None:
            self.created = created
        if published is not None:
            self.published = published
        if updated is not None:
            self.updated = updated
        if cwes is not None:
            self.cwes = cwes
        if cvss_v2_base_score is not None:
            self.cvss_v2_base_score = cvss_v2_base_score
        if cvss_v2_impact_sub_score is not None:
            self.cvss_v2_impact_sub_score = cvss_v2_impact_sub_score
        if cvss_v2_exploitability_sub_score is not None:
            self.cvss_v2_exploitability_sub_score = cvss_v2_exploitability_sub_score
        if cvss_v2_vector is not None:
            self.cvss_v2_vector = cvss_v2_vector
        if cvss_v3_base_score is not None:
            self.cvss_v3_base_score = cvss_v3_base_score
        if cvss_v3_impact_sub_score is not None:
            self.cvss_v3_impact_sub_score = cvss_v3_impact_sub_score
        if cvss_v3_exploitability_sub_score is not None:
            self.cvss_v3_exploitability_sub_score = cvss_v3_exploitability_sub_score
        if cvss_v3_vector is not None:
            self.cvss_v3_vector = cvss_v3_vector
        if owasp_rr_likelihood_score is not None:
            self.owasp_rr_likelihood_score = owasp_rr_likelihood_score
        if owasp_rr_technical_impact_score is not None:
            self.owasp_rr_technical_impact_score = owasp_rr_technical_impact_score
        if owasp_rr_business_impact_score is not None:
            self.owasp_rr_business_impact_score = owasp_rr_business_impact_score
        if owasp_rr_vector is not None:
            self.owasp_rr_vector = owasp_rr_vector
        if severity is not None:
            self.severity = severity
        if vulnerable_versions is not None:
            self.vulnerable_versions = vulnerable_versions
        if patched_versions is not None:
            self.patched_versions = patched_versions
        if epss_score is not None:
            self.epss_score = epss_score
        if epss_percentile is not None:
            self.epss_percentile = epss_percentile
        if components is not None:
            self.components = components
        if service_components is not None:
            self.service_components = service_components
        self.uuid = uuid
        if aliases is not None:
            self.aliases = aliases
        if finding_attribution is not None:
            self.finding_attribution = finding_attribution
        if affected_project_count is not None:
            self.affected_project_count = affected_project_count
        if affected_active_project_count is not None:
            self.affected_active_project_count = affected_active_project_count
        if affected_inactive_project_count is not None:
            self.affected_inactive_project_count = affected_inactive_project_count
        if affected_components is not None:
            self.affected_components = affected_components
        if cwe is not None:
            self.cwe = cwe

    @property
    def vuln_id(self):
        """Gets the vuln_id of this Vulnerability.  # noqa: E501


        :return: The vuln_id of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._vuln_id

    @vuln_id.setter
    def vuln_id(self, vuln_id):
        """Sets the vuln_id of this Vulnerability.


        :param vuln_id: The vuln_id of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._vuln_id = vuln_id

    @property
    def source(self):
        """Gets the source of this Vulnerability.  # noqa: E501


        :return: The source of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Vulnerability.


        :param source: The source of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def friendly_vuln_id(self):
        """Gets the friendly_vuln_id of this Vulnerability.  # noqa: E501


        :return: The friendly_vuln_id of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._friendly_vuln_id

    @friendly_vuln_id.setter
    def friendly_vuln_id(self, friendly_vuln_id):
        """Sets the friendly_vuln_id of this Vulnerability.


        :param friendly_vuln_id: The friendly_vuln_id of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._friendly_vuln_id = friendly_vuln_id

    @property
    def title(self):
        """Gets the title of this Vulnerability.  # noqa: E501


        :return: The title of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Vulnerability.


        :param title: The title of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def sub_title(self):
        """Gets the sub_title of this Vulnerability.  # noqa: E501


        :return: The sub_title of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._sub_title

    @sub_title.setter
    def sub_title(self, sub_title):
        """Sets the sub_title of this Vulnerability.


        :param sub_title: The sub_title of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._sub_title = sub_title

    @property
    def description(self):
        """Gets the description of this Vulnerability.  # noqa: E501


        :return: The description of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Vulnerability.


        :param description: The description of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def detail(self):
        """Gets the detail of this Vulnerability.  # noqa: E501


        :return: The detail of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this Vulnerability.


        :param detail: The detail of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._detail = detail

    @property
    def recommendation(self):
        """Gets the recommendation of this Vulnerability.  # noqa: E501


        :return: The recommendation of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._recommendation

    @recommendation.setter
    def recommendation(self, recommendation):
        """Sets the recommendation of this Vulnerability.


        :param recommendation: The recommendation of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._recommendation = recommendation

    @property
    def references(self):
        """Gets the references of this Vulnerability.  # noqa: E501


        :return: The references of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this Vulnerability.


        :param references: The references of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._references = references

    @property
    def credits(self):
        """Gets the credits of this Vulnerability.  # noqa: E501


        :return: The credits of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this Vulnerability.


        :param credits: The credits of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._credits = credits

    @property
    def created(self):
        """Gets the created of this Vulnerability.  # noqa: E501


        :return: The created of this Vulnerability.  # noqa: E501
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Vulnerability.


        :param created: The created of this Vulnerability.  # noqa: E501
        :type: datetime
        """

        self._created = created

    @property
    def published(self):
        """Gets the published of this Vulnerability.  # noqa: E501


        :return: The published of this Vulnerability.  # noqa: E501
        :rtype: datetime
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this Vulnerability.


        :param published: The published of this Vulnerability.  # noqa: E501
        :type: datetime
        """

        self._published = published

    @property
    def updated(self):
        """Gets the updated of this Vulnerability.  # noqa: E501


        :return: The updated of this Vulnerability.  # noqa: E501
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Vulnerability.


        :param updated: The updated of this Vulnerability.  # noqa: E501
        :type: datetime
        """

        self._updated = updated

    @property
    def cwes(self):
        """Gets the cwes of this Vulnerability.  # noqa: E501


        :return: The cwes of this Vulnerability.  # noqa: E501
        :rtype: list[Cwe]
        """
        return self._cwes

    @cwes.setter
    def cwes(self, cwes):
        """Sets the cwes of this Vulnerability.


        :param cwes: The cwes of this Vulnerability.  # noqa: E501
        :type: list[Cwe]
        """

        self._cwes = cwes

    @property
    def cvss_v2_base_score(self):
        """Gets the cvss_v2_base_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v2_base_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v2_base_score

    @cvss_v2_base_score.setter
    def cvss_v2_base_score(self, cvss_v2_base_score):
        """Sets the cvss_v2_base_score of this Vulnerability.


        :param cvss_v2_base_score: The cvss_v2_base_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v2_base_score = cvss_v2_base_score

    @property
    def cvss_v2_impact_sub_score(self):
        """Gets the cvss_v2_impact_sub_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v2_impact_sub_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v2_impact_sub_score

    @cvss_v2_impact_sub_score.setter
    def cvss_v2_impact_sub_score(self, cvss_v2_impact_sub_score):
        """Sets the cvss_v2_impact_sub_score of this Vulnerability.


        :param cvss_v2_impact_sub_score: The cvss_v2_impact_sub_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v2_impact_sub_score = cvss_v2_impact_sub_score

    @property
    def cvss_v2_exploitability_sub_score(self):
        """Gets the cvss_v2_exploitability_sub_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v2_exploitability_sub_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v2_exploitability_sub_score

    @cvss_v2_exploitability_sub_score.setter
    def cvss_v2_exploitability_sub_score(self, cvss_v2_exploitability_sub_score):
        """Sets the cvss_v2_exploitability_sub_score of this Vulnerability.


        :param cvss_v2_exploitability_sub_score: The cvss_v2_exploitability_sub_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v2_exploitability_sub_score = cvss_v2_exploitability_sub_score

    @property
    def cvss_v2_vector(self):
        """Gets the cvss_v2_vector of this Vulnerability.  # noqa: E501


        :return: The cvss_v2_vector of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._cvss_v2_vector

    @cvss_v2_vector.setter
    def cvss_v2_vector(self, cvss_v2_vector):
        """Sets the cvss_v2_vector of this Vulnerability.


        :param cvss_v2_vector: The cvss_v2_vector of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._cvss_v2_vector = cvss_v2_vector

    @property
    def cvss_v3_base_score(self):
        """Gets the cvss_v3_base_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v3_base_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v3_base_score

    @cvss_v3_base_score.setter
    def cvss_v3_base_score(self, cvss_v3_base_score):
        """Sets the cvss_v3_base_score of this Vulnerability.


        :param cvss_v3_base_score: The cvss_v3_base_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v3_base_score = cvss_v3_base_score

    @property
    def cvss_v3_impact_sub_score(self):
        """Gets the cvss_v3_impact_sub_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v3_impact_sub_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v3_impact_sub_score

    @cvss_v3_impact_sub_score.setter
    def cvss_v3_impact_sub_score(self, cvss_v3_impact_sub_score):
        """Sets the cvss_v3_impact_sub_score of this Vulnerability.


        :param cvss_v3_impact_sub_score: The cvss_v3_impact_sub_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v3_impact_sub_score = cvss_v3_impact_sub_score

    @property
    def cvss_v3_exploitability_sub_score(self):
        """Gets the cvss_v3_exploitability_sub_score of this Vulnerability.  # noqa: E501


        :return: The cvss_v3_exploitability_sub_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._cvss_v3_exploitability_sub_score

    @cvss_v3_exploitability_sub_score.setter
    def cvss_v3_exploitability_sub_score(self, cvss_v3_exploitability_sub_score):
        """Sets the cvss_v3_exploitability_sub_score of this Vulnerability.


        :param cvss_v3_exploitability_sub_score: The cvss_v3_exploitability_sub_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._cvss_v3_exploitability_sub_score = cvss_v3_exploitability_sub_score

    @property
    def cvss_v3_vector(self):
        """Gets the cvss_v3_vector of this Vulnerability.  # noqa: E501


        :return: The cvss_v3_vector of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._cvss_v3_vector

    @cvss_v3_vector.setter
    def cvss_v3_vector(self, cvss_v3_vector):
        """Sets the cvss_v3_vector of this Vulnerability.


        :param cvss_v3_vector: The cvss_v3_vector of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._cvss_v3_vector = cvss_v3_vector

    @property
    def owasp_rr_likelihood_score(self):
        """Gets the owasp_rr_likelihood_score of this Vulnerability.  # noqa: E501


        :return: The owasp_rr_likelihood_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._owasp_rr_likelihood_score

    @owasp_rr_likelihood_score.setter
    def owasp_rr_likelihood_score(self, owasp_rr_likelihood_score):
        """Sets the owasp_rr_likelihood_score of this Vulnerability.


        :param owasp_rr_likelihood_score: The owasp_rr_likelihood_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._owasp_rr_likelihood_score = owasp_rr_likelihood_score

    @property
    def owasp_rr_technical_impact_score(self):
        """Gets the owasp_rr_technical_impact_score of this Vulnerability.  # noqa: E501


        :return: The owasp_rr_technical_impact_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._owasp_rr_technical_impact_score

    @owasp_rr_technical_impact_score.setter
    def owasp_rr_technical_impact_score(self, owasp_rr_technical_impact_score):
        """Sets the owasp_rr_technical_impact_score of this Vulnerability.


        :param owasp_rr_technical_impact_score: The owasp_rr_technical_impact_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._owasp_rr_technical_impact_score = owasp_rr_technical_impact_score

    @property
    def owasp_rr_business_impact_score(self):
        """Gets the owasp_rr_business_impact_score of this Vulnerability.  # noqa: E501


        :return: The owasp_rr_business_impact_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._owasp_rr_business_impact_score

    @owasp_rr_business_impact_score.setter
    def owasp_rr_business_impact_score(self, owasp_rr_business_impact_score):
        """Sets the owasp_rr_business_impact_score of this Vulnerability.


        :param owasp_rr_business_impact_score: The owasp_rr_business_impact_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._owasp_rr_business_impact_score = owasp_rr_business_impact_score

    @property
    def owasp_rr_vector(self):
        """Gets the owasp_rr_vector of this Vulnerability.  # noqa: E501


        :return: The owasp_rr_vector of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._owasp_rr_vector

    @owasp_rr_vector.setter
    def owasp_rr_vector(self, owasp_rr_vector):
        """Sets the owasp_rr_vector of this Vulnerability.


        :param owasp_rr_vector: The owasp_rr_vector of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._owasp_rr_vector = owasp_rr_vector

    @property
    def severity(self):
        """Gets the severity of this Vulnerability.  # noqa: E501


        :return: The severity of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this Vulnerability.


        :param severity: The severity of this Vulnerability.  # noqa: E501
        :type: str
        """
        allowed_values = ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO", "UNASSIGNED"]  # noqa: E501
        if severity not in allowed_values:
            raise ValueError(
                "Invalid value for `severity` ({0}), must be one of {1}"  # noqa: E501
                .format(severity, allowed_values)
            )

        self._severity = severity

    @property
    def vulnerable_versions(self):
        """Gets the vulnerable_versions of this Vulnerability.  # noqa: E501


        :return: The vulnerable_versions of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._vulnerable_versions

    @vulnerable_versions.setter
    def vulnerable_versions(self, vulnerable_versions):
        """Sets the vulnerable_versions of this Vulnerability.


        :param vulnerable_versions: The vulnerable_versions of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._vulnerable_versions = vulnerable_versions

    @property
    def patched_versions(self):
        """Gets the patched_versions of this Vulnerability.  # noqa: E501


        :return: The patched_versions of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._patched_versions

    @patched_versions.setter
    def patched_versions(self, patched_versions):
        """Sets the patched_versions of this Vulnerability.


        :param patched_versions: The patched_versions of this Vulnerability.  # noqa: E501
        :type: str
        """

        self._patched_versions = patched_versions

    @property
    def epss_score(self):
        """Gets the epss_score of this Vulnerability.  # noqa: E501


        :return: The epss_score of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._epss_score

    @epss_score.setter
    def epss_score(self, epss_score):
        """Sets the epss_score of this Vulnerability.


        :param epss_score: The epss_score of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._epss_score = epss_score

    @property
    def epss_percentile(self):
        """Gets the epss_percentile of this Vulnerability.  # noqa: E501


        :return: The epss_percentile of this Vulnerability.  # noqa: E501
        :rtype: float
        """
        return self._epss_percentile

    @epss_percentile.setter
    def epss_percentile(self, epss_percentile):
        """Sets the epss_percentile of this Vulnerability.


        :param epss_percentile: The epss_percentile of this Vulnerability.  # noqa: E501
        :type: float
        """

        self._epss_percentile = epss_percentile

    @property
    def components(self):
        """Gets the components of this Vulnerability.  # noqa: E501


        :return: The components of this Vulnerability.  # noqa: E501
        :rtype: list[Component]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this Vulnerability.


        :param components: The components of this Vulnerability.  # noqa: E501
        :type: list[Component]
        """

        self._components = components

    @property
    def service_components(self):
        """Gets the service_components of this Vulnerability.  # noqa: E501


        :return: The service_components of this Vulnerability.  # noqa: E501
        :rtype: list[ServiceComponent]
        """
        return self._service_components

    @service_components.setter
    def service_components(self, service_components):
        """Sets the service_components of this Vulnerability.


        :param service_components: The service_components of this Vulnerability.  # noqa: E501
        :type: list[ServiceComponent]
        """

        self._service_components = service_components

    @property
    def uuid(self):
        """Gets the uuid of this Vulnerability.  # noqa: E501


        :return: The uuid of this Vulnerability.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Vulnerability.


        :param uuid: The uuid of this Vulnerability.  # noqa: E501
        :type: str
        """
        if uuid is None:
            raise ValueError("Invalid value for `uuid`, must not be `None`")  # noqa: E501

        self._uuid = uuid

    @property
    def aliases(self):
        """Gets the aliases of this Vulnerability.  # noqa: E501


        :return: The aliases of this Vulnerability.  # noqa: E501
        :rtype: list[VulnerabilityAlias]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this Vulnerability.


        :param aliases: The aliases of this Vulnerability.  # noqa: E501
        :type: list[VulnerabilityAlias]
        """

        self._aliases = aliases

    @property
    def finding_attribution(self):
        """Gets the finding_attribution of this Vulnerability.  # noqa: E501


        :return: The finding_attribution of this Vulnerability.  # noqa: E501
        :rtype: FindingAttribution
        """
        return self._finding_attribution

    @finding_attribution.setter
    def finding_attribution(self, finding_attribution):
        """Sets the finding_attribution of this Vulnerability.


        :param finding_attribution: The finding_attribution of this Vulnerability.  # noqa: E501
        :type: FindingAttribution
        """

        self._finding_attribution = finding_attribution

    @property
    def affected_project_count(self):
        """Gets the affected_project_count of this Vulnerability.  # noqa: E501


        :return: The affected_project_count of this Vulnerability.  # noqa: E501
        :rtype: int
        """
        return self._affected_project_count

    @affected_project_count.setter
    def affected_project_count(self, affected_project_count):
        """Sets the affected_project_count of this Vulnerability.


        :param affected_project_count: The affected_project_count of this Vulnerability.  # noqa: E501
        :type: int
        """

        self._affected_project_count = affected_project_count

    @property
    def affected_active_project_count(self):
        """Gets the affected_active_project_count of this Vulnerability.  # noqa: E501


        :return: The affected_active_project_count of this Vulnerability.  # noqa: E501
        :rtype: int
        """
        return self._affected_active_project_count

    @affected_active_project_count.setter
    def affected_active_project_count(self, affected_active_project_count):
        """Sets the affected_active_project_count of this Vulnerability.


        :param affected_active_project_count: The affected_active_project_count of this Vulnerability.  # noqa: E501
        :type: int
        """

        self._affected_active_project_count = affected_active_project_count

    @property
    def affected_inactive_project_count(self):
        """Gets the affected_inactive_project_count of this Vulnerability.  # noqa: E501


        :return: The affected_inactive_project_count of this Vulnerability.  # noqa: E501
        :rtype: int
        """
        return self._affected_inactive_project_count

    @affected_inactive_project_count.setter
    def affected_inactive_project_count(self, affected_inactive_project_count):
        """Sets the affected_inactive_project_count of this Vulnerability.


        :param affected_inactive_project_count: The affected_inactive_project_count of this Vulnerability.  # noqa: E501
        :type: int
        """

        self._affected_inactive_project_count = affected_inactive_project_count

    @property
    def affected_components(self):
        """Gets the affected_components of this Vulnerability.  # noqa: E501


        :return: The affected_components of this Vulnerability.  # noqa: E501
        :rtype: list[AffectedComponent]
        """
        return self._affected_components

    @affected_components.setter
    def affected_components(self, affected_components):
        """Sets the affected_components of this Vulnerability.


        :param affected_components: The affected_components of this Vulnerability.  # noqa: E501
        :type: list[AffectedComponent]
        """

        self._affected_components = affected_components

    @property
    def cwe(self):
        """Gets the cwe of this Vulnerability.  # noqa: E501


        :return: The cwe of this Vulnerability.  # noqa: E501
        :rtype: Cwe
        """
        return self._cwe

    @cwe.setter
    def cwe(self, cwe):
        """Sets the cwe of this Vulnerability.


        :param cwe: The cwe of this Vulnerability.  # noqa: E501
        :type: Cwe
        """

        self._cwe = cwe

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Vulnerability, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Vulnerability):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
